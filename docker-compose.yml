services:
  app:
    build:
      context: .
      dockerfile: Docker/Dockerfile.app
    command: ["/entrypoint.app.sh"]
    restart: always
    depends_on:
      - redis
      - pgsql
    networks:
      - default
      - internal
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/upload
      - TRAEFIK_CONFIG_DIR=/data/traefik
      - DOCKER_HOST=tcp://docker-proxy:2375
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`${HOSTNAME:-localhost}`)"
      - "traefik.http.routers.app.service=app@docker"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
      - "traefik.docker.network=devpush_default"

  worker:
    build:
      context: .
      dockerfile: Docker/Dockerfile.app
    command: ["/entrypoint.worker.sh"]
    restart: always
    stop_grace_period: ${JOB_TIMEOUT:-320}s
    depends_on:
      - redis
      - pgsql
    networks:
      - default
      - internal
      - runner
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/upload
      - TRAEFIK_CONFIG_DIR=/data/traefik
      - DOCKER_HOST=tcp://docker-proxy:2375

  redis:
    image: redis:alpine
    restart: always
    networks:
      - internal

  docker-proxy:
    image: tecnativa/docker-socket-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONTAINERS=1
      - POST=1
      - EXEC=1
      - NETWORKS=1
      - DISABLE_IPV6=1
    networks:
      - internal

  traefik:
    image: traefik:v3.3.2
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.endpoint=tcp://docker-proxy:2375"
      - "--providers.docker.watch=true"
      - "--providers.file.directory=/etc/traefik/dynamic_conf"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    networks:
      - default
      - internal
      - runner
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.deployment-not-found.rule=HostRegexp(`^(.+)\\.${DEPLOY_DOMAIN:-deploy.localhost}$`)"
      - "traefik.http.routers.deployment-not-found.entrypoints=web"
      - "traefik.http.routers.deployment-not-found.priority=1"
      - "traefik.http.routers.deployment-not-found.service=noop@internal"
      - "traefik.http.routers.deployment-not-found.middlewares=deployment-redirect"
      - "traefik.http.middlewares.deployment-redirect.redirectRegex.regex=^https?://([^/]+)"
      - "traefik.http.middlewares.deployment-redirect.redirectRegex.replacement=${URL_SCHEME:-http}://${HOSTNAME:-localhost}/deployment-not-found/$$1"
      - "traefik.http.middlewares.deployment-redirect.redirectRegex.permanent=false"

  runner:
    image: runner
    build:
      context: ./Docker
      dockerfile: Dockerfile.runner
    profiles: ["build-only"]
    dns:
      - 8.8.8.8
      - 8.8.4.4

  pgsql:
    image: postgres:16
    restart: always
    networks:
      - internal
    environment:
      - LANG=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
    env_file:
      - .env
    volumes:
      - devpush-db:/var/lib/postgresql/data

volumes:
  devpush-db:

networks:
  default:
    name: devpush_default
  internal:
    name: devpush_internal
    internal: true
  runner:
    name: devpush_runner