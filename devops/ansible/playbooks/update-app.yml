---
- hosts: all
  vars:
    deploy_user: deploy
    app_dir: /home/deploy/devpush

  tasks:
    - name: Clone/update repository
      git:
        repo: "{{ github_repo }}"
        dest: "{{ app_dir }}"
        update: yes
        force: yes

    - name: Copy .env file
      ansible.builtin.copy:
        src: ../../../.env.prod
        dest: "{{ app_dir }}/.env"
        owner: "{{ deploy_user }}"
        group: "{{ deploy_user }}"
        mode: "0600"

    - name: Build app image
      command: docker compose -p devpush build app
      args:
        chdir: "{{ app_dir }}"

    - name: Get running app containers
      command: docker ps --filter "name=devpush-app" --format "{{'{{.Names}}'}}"
      register: running_apps
      args:
        chdir: "{{ app_dir }}"

    - name: Update app containers one by one
      include_tasks: update-single-app.yml
      loop: "{{ running_apps.stdout_lines }}"
      loop_control:
        loop_var: app_name

    - name: Verify all app containers are healthy
      shell: |
        expected=2
        healthy=$(docker ps --filter "name=devpush-app" --filter "health=healthy" -q | wc -l)
        if [ "$healthy" = "$expected" ]; then
          echo "All $expected app containers are healthy"
          exit 0
        else
          echo "Expected $expected healthy app containers, but $healthy are healthy"
          exit 1
        fi
      args:
        chdir: "{{ app_dir }}"

    - name: Verify app is responding
      shell: |
        docker compose -p devpush exec -T app curl -f http://localhost:8000/health
      args:
        chdir: "{{ app_dir }}"
      retries: 5
      delay: 10 