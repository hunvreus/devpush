"""initial

Revision ID: afa1ae3370be
Revises: 
Create Date: 2025-07-14 12:41:15.033987

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'afa1ae3370be'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('github_installation',
    sa.Column('installation_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=2048), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('active', 'deleted', 'suspended', name='github_installation_status'), nullable=False),
    sa.PrimaryKeyConstraint('installation_id')
    )
    op.create_table('team',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=40), nullable=True),
    sa.Column('has_avatar', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'deleted', name='team_status'), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_team_created_at'), 'team', ['created_at'], unique=False)
    op.create_index(op.f('ix_team_name'), 'team', ['name'], unique=False)
    op.create_index(op.f('ix_team_updated_at'), 'team', ['updated_at'], unique=False)
    op.create_table('project',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('has_avatar', sa.Boolean(), nullable=False),
    sa.Column('repo_id', sa.BigInteger(), nullable=False),
    sa.Column('repo_full_name', sa.String(length=255), nullable=False),
    sa.Column('repo_status', sa.Enum('active', 'deleted', 'removed', 'transferred', name='project_github_status'), nullable=False),
    sa.Column('github_installation_id', sa.Integer(), nullable=False),
    sa.Column('environments', sa.JSON(), nullable=False),
    sa.Column('env_vars', sa.Text(), nullable=False),
    sa.Column('slug', sa.String(length=40), nullable=True),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('active', 'paused', 'deleted', name='project_status'), nullable=False),
    sa.Column('team_id', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], use_alter=True),
    sa.ForeignKeyConstraint(['github_installation_id'], ['github_installation.installation_id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug'),
    sa.UniqueConstraint('team_id', 'name', name='uq_project_team_name')
    )
    op.create_index(op.f('ix_project_created_at'), 'project', ['created_at'], unique=False)
    op.create_index(op.f('ix_project_github_installation_id'), 'project', ['github_installation_id'], unique=False)
    op.create_index(op.f('ix_project_name'), 'project', ['name'], unique=False)
    op.create_index(op.f('ix_project_repo_full_name'), 'project', ['repo_full_name'], unique=False)
    op.create_index(op.f('ix_project_repo_id'), 'project', ['repo_id'], unique=False)
    op.create_index(op.f('ix_project_team_id'), 'project', ['team_id'], unique=False)
    op.create_index(op.f('ix_project_updated_at'), 'project', ['updated_at'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('has_avatar', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('active', 'deleted', name='team_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('default_team_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['default_team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_created_at'), 'user', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=False)
    op.create_index(op.f('ix_user_updated_at'), 'user', ['updated_at'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('deployment',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('project_id', sa.String(length=32), nullable=False),
    sa.Column('repo_id', sa.BigInteger(), nullable=False),
    sa.Column('repo_full_name', sa.String(length=255), nullable=False),
    sa.Column('environment_id', sa.String(length=8), nullable=False),
    sa.Column('branch', sa.String(length=255), nullable=False),
    sa.Column('commit_sha', sa.String(length=40), nullable=False),
    sa.Column('commit_meta', sa.JSON(), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('env_vars', sa.Text(), nullable=False),
    sa.Column('container_id', sa.String(length=64), nullable=True),
    sa.Column('container_status', sa.Enum('running', 'stopped', 'removed', name='deployment_container_status'), nullable=True),
    sa.Column('status', sa.Enum('queued', 'in_progress', 'completed', name='deployment_status'), nullable=False),
    sa.Column('conclusion', sa.Enum('succeeded', 'failed', 'canceled', 'skipped', name='deployment_conclusion'), nullable=True),
    sa.Column('trigger', sa.Enum('webhook', 'user', 'api', name='deployment_trigger'), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('concluded_at', sa.DateTime(), nullable=True),
    sa.Column('build_logs', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['user.id'], use_alter=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deployment_branch'), 'deployment', ['branch'], unique=False)
    op.create_index(op.f('ix_deployment_commit_sha'), 'deployment', ['commit_sha'], unique=False)
    op.create_index(op.f('ix_deployment_concluded_at'), 'deployment', ['concluded_at'], unique=False)
    op.create_index(op.f('ix_deployment_created_at'), 'deployment', ['created_at'], unique=False)
    op.create_index(op.f('ix_deployment_project_id'), 'deployment', ['project_id'], unique=False)
    op.create_index(op.f('ix_deployment_repo_full_name'), 'deployment', ['repo_full_name'], unique=False)
    op.create_index(op.f('ix_deployment_repo_id'), 'deployment', ['repo_id'], unique=False)
    op.create_table('team_invite',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('team_id', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('role', sa.Enum('owner', 'admin', 'member', name='team_invite_role'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'revoked', name='team_invite_status'), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['inviter_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_invite_email'), 'team_invite', ['email'], unique=False)
    op.create_index(op.f('ix_team_invite_inviter_id'), 'team_invite', ['inviter_id'], unique=False)
    op.create_index(op.f('ix_team_invite_team_id'), 'team_invite', ['team_id'], unique=False)
    op.create_table('team_member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.String(length=32), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('owner', 'admin', 'member', name='team_member_role'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_member_team_id'), 'team_member', ['team_id'], unique=False)
    op.create_index(op.f('ix_team_member_user_id'), 'team_member', ['user_id'], unique=False)
    op.create_table('user_identity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('provider', sa.Enum('github', 'google', name='identity_provider'), nullable=False),
    sa.Column('provider_user_id', sa.String(length=100), nullable=True),
    sa.Column('access_token', sa.String(length=2048), nullable=True),
    sa.Column('refresh_token', sa.String(length=2048), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('provider_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'provider_user_id', name='uq_identity_provider_user')
    )
    op.create_index(op.f('ix_user_identity_provider'), 'user_identity', ['provider'], unique=False)
    op.create_index(op.f('ix_user_identity_provider_user_id'), 'user_identity', ['provider_user_id'], unique=False)
    op.create_index(op.f('ix_user_identity_user_id'), 'user_identity', ['user_id'], unique=False)
    op.create_table('alias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subdomain', sa.String(length=63), nullable=False),
    sa.Column('deployment_id', sa.String(length=32), nullable=False),
    sa.Column('previous_deployment_id', sa.String(length=32), nullable=True),
    sa.Column('type', sa.Enum('branch', 'environment', name='alias_type'), nullable=False),
    sa.Column('value', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['deployment_id'], ['deployment.id'], ),
    sa.ForeignKeyConstraint(['previous_deployment_id'], ['deployment.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('subdomain')
    )
    op.create_index(op.f('ix_alias_deployment_id'), 'alias', ['deployment_id'], unique=False)
    op.create_index(op.f('ix_alias_previous_deployment_id'), 'alias', ['previous_deployment_id'], unique=False)
    op.create_index(op.f('ix_alias_updated_at'), 'alias', ['updated_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_alias_updated_at'), table_name='alias')
    op.drop_index(op.f('ix_alias_previous_deployment_id'), table_name='alias')
    op.drop_index(op.f('ix_alias_deployment_id'), table_name='alias')
    op.drop_table('alias')
    op.drop_index(op.f('ix_user_identity_user_id'), table_name='user_identity')
    op.drop_index(op.f('ix_user_identity_provider_user_id'), table_name='user_identity')
    op.drop_index(op.f('ix_user_identity_provider'), table_name='user_identity')
    op.drop_table('user_identity')
    op.drop_index(op.f('ix_team_member_user_id'), table_name='team_member')
    op.drop_index(op.f('ix_team_member_team_id'), table_name='team_member')
    op.drop_table('team_member')
    op.drop_index(op.f('ix_team_invite_team_id'), table_name='team_invite')
    op.drop_index(op.f('ix_team_invite_inviter_id'), table_name='team_invite')
    op.drop_index(op.f('ix_team_invite_email'), table_name='team_invite')
    op.drop_table('team_invite')
    op.drop_index(op.f('ix_deployment_repo_id'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_repo_full_name'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_project_id'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_created_at'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_concluded_at'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_commit_sha'), table_name='deployment')
    op.drop_index(op.f('ix_deployment_branch'), table_name='deployment')
    op.drop_table('deployment')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_updated_at'), table_name='user')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_created_at'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_project_updated_at'), table_name='project')
    op.drop_index(op.f('ix_project_team_id'), table_name='project')
    op.drop_index(op.f('ix_project_repo_id'), table_name='project')
    op.drop_index(op.f('ix_project_repo_full_name'), table_name='project')
    op.drop_index(op.f('ix_project_name'), table_name='project')
    op.drop_index(op.f('ix_project_github_installation_id'), table_name='project')
    op.drop_index(op.f('ix_project_created_at'), table_name='project')
    op.drop_table('project')
    op.drop_index(op.f('ix_team_updated_at'), table_name='team')
    op.drop_index(op.f('ix_team_name'), table_name='team')
    op.drop_index(op.f('ix_team_created_at'), table_name='team')
    op.drop_table('team')
    op.drop_table('github_installation')
    # ### end Alembic commands ###
